{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Logo/Logo.module.css","components/UI/Backdrop/Backdrop.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","hoc/Layout/Layout.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","store/actions/actionTypes.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","hoc/Auxiliary/Auxiliary.js","assets/Images/burger-logo.png","components/Logo/Logo.js","components/UI/Backdrop/Backdrop.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawer.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","hoc/Layout/Layout.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","updateObject","oldObject","updatedProperties","INGREDIENT_PRICES","salad","cheese","meat","bacon","initialState","ingredients","totalPrice","error","addIngredient","state","action","updatedIngredient","ingredientName","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchedIngredientsFailed","reducer","type","actionTypes","orders","loading","purchased","newOrder","orderData","id","ordr","concat","token","userId","authStart","authSuccess","idToken","authFail","aux","props","children","Logo","className","classes","src","burgerLogo","alt","Backdrop","show","onClick","clicked","NavigationItem","to","link","exact","activeClassName","active","NavigationItems","SideDrawer","attachedClasses","Close","open","Open","closed","join","DrawerToggle","Toolbar","drawerToggleClicked","DesktopOnly","Layout","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","initIngredients","dispatch","axios","get","then","response","data","catch","purchaseBurger","Axios","post","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","res","fetchedOrders","key","push","err","auth","email","password","isSignup","authData","returnSecureToken","url","console","log","localId","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","length","BuildControl","Label","label","Less","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","ordered","purchasable","Modal","nextProps","nextState","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","Spinner","Loader","withErrorHandler","WrapperComponent","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","message","eject","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchased","history","onInitIngredients","sum","disabledInfo","ings","orderSummary","burger","Fragment","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","ingName","actions","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","InputElement","validationError","invalid","touched","ValidationError","shouldValidate","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","path","match","component","Order","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","Orders","onFetchOrders","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","errorMessage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9195326.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2tpYw\",\"BreadTop\":\"BurgerIngredient_BreadTop__1V3re\",\"Seeds1\":\"BurgerIngredient_Seeds1__1_A4Z\",\"Seeds2\":\"BurgerIngredient_Seeds2__1osWt\",\"Meat\":\"BurgerIngredient_Meat__2g4lD\",\"Cheese\":\"BurgerIngredient_Cheese__gpUkZ\",\"Salad\":\"BurgerIngredient_Salad__2wa--\",\"Bacon\":\"BurgerIngredient_Bacon__DEo1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1WP1n\",\"Open\":\"SideDrawer_Open__Z41Gv\",\"Close\":\"SideDrawer_Close__2WpXH\",\"Logo\":\"SideDrawer_Logo__2WYlh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__yDAHA\",\"Label\":\"Input_Label__2n2d0\",\"InputElement\":\"Input_InputElement__3513A\",\"Invalid\":\"Input_Invalid__3Dijp\",\"ValidationError\":\"Input_ValidationError__3SPtI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2IMT3\",\"Label\":\"BuildControl_Label__28FjG\",\"Less\":\"BuildControl_Less__3GIht\",\"More\":\"BuildControl_More__1SiAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3za2G\",\"Logo\":\"Toolbar_Logo__2RK_m\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2hLBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2L6K_\",\"active\":\"NavigationItem_active__2GnY8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2k3d1\",\"OrderButton\":\"BuildControls_OrderButton__pcUAZ\",\"enable\":\"BuildControls_enable__1aJk2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R60b\",\"Success\":\"Button_Success__3wi1H\",\"Danger\":\"Button_Danger__3GEDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3xyJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1c-O6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1Uf04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3GO90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3PVhH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__14Lmd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__262Un\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader___Eo9M\",\"load1\":\"Spinner_load1__3G0yy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1T0tv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__JTRMx\",\"Input\":\"ContactData_Input__23t59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1KwvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__8Ni9S\",\"Input\":\"Auth_Input__1kkH7\"};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const  PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const  PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1}\r\n            const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\r\n            const updatedState = {\r\n                ingredients: updatedIngredients,\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n            return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1}\r\n            const updatedIngs = updateObject(state.ingredients, updatedIng)\r\n            const updatedSt = {\r\n                ingredients: updatedIngs,\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            };\r\n            return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        // ingredients: action.ingredients, (Use this if you aren't concerned with ingredients sequence in which they are added)\r\n\r\n        ingredients: {\r\n            /* This form is only used if you want to have a sequence of ingredients like Sald on top, meat at bottom*/\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false\r\n    });\r\n};\r\n\r\nconst fetchedIngredientsFailed = (state,action) => {\r\n    return updateObject(state, { error: true });\r\n};\r\n\r\nconst reducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state, action);\r\n\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredients(state, action);\r\n            \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchedIngredientsFailed(state,action);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_INIT:\r\n            return updateObject(state, { purchased: false });\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return updateObject(state, { loading: true });\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = updateObject(action.orderData, { id: action.ordr.id });\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return updateObject(state, { loading: false });\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return updateObject( state, { loading: true })\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return updateObject(state, {\r\n                orders: action.orders,\r\n                loading: false\r\n            });\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return updateObject(state, { loading: false });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","const aux = (props) => props.children;\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport burgerLogo from '../../assets/Images/burger-logo.png';\r\n\r\nconst Logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <img src={burgerLogo} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop}\r\n                    onClick={props.clicked}></div> : null\r\n);\r\n    \r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst NavigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink to={props.link} exact={props.exact} activeClassName={classes.active}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\n\r\nconst NavigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        {/*<NavigationItem link=\"/burger-proj\" exact>Burger Builder</NavigationItem> only for when hosted online (Remove the below NavigationItem for Burger Builder and use this commented one) */} \r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport backdrop from '../../UI/Backdrop/Backdrop';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst SideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return(\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\nexport default SideDrawer;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst DrawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport classes from './Toolbar.module.css';\r\n\r\nconst Toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n        <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default Toolbar;","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport classes from './Layout.module.css';\r\n\r\nclass Layout extends Component{\r\n    state = {\r\n        showSideDrawer: true\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}  />\r\n                <SideDrawer open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const addIngredient = (name) => {\r\n    return{\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return{\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return{\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchedIngredientsFailed = () => {\r\n    return{\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://burger-react-56352-default-rtdb.firebaseio.com/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data));\r\n        })\r\n        .catch(error => {\r\n           dispatch(fetchedIngredientsFailed());\r\n        }); \r\n    }\r\n};","import * as actionTypes from './actionTypes';\r\nimport Axios from 'axios';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return{\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n};\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        Axios.post('/orders.json', orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return{\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return{\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        Axios.get('/orders.json').then(res => {\r\n            const fetchedOrders = [];\r\n            for(let key in res.data){\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            \r\n        }).catch(err => {\r\n            dispatch(fetchOrdersFail(err))\r\n        })\r\n    }\r\n}","import axios from 'axios';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return{\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return{\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAP1ThF_gqjOaxFQ2QqWLgfCe5gw2m6Qu4';\r\n        if(!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAP1ThF_gqjOaxFQ2QqWLgfCe5gw2m6Qu4';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            })\r\n            .catch(err => {\r\n                console.log(err.response.data.error);\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};","import React from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = (props) => {\r\n    let ingredient = null;\r\n\r\n    switch(props.type){\r\n        case ('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        default :\r\n                ingredient = null;\r\n    }\r\n    return ingredient;\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst Burger = (props) => {\r\n    console.log(props);\r\n    let transformedIngredients = Object.keys(props.ingredients) /*keys() extracts the keys of the Object and turns that into an array*/\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            })\r\n        }).reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []); \r\n    if(transformedIngredients.length === 0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n\r\n    console.log(transformedIngredients);\r\n    return(\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n\r\n);\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst BuildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl key={ctrl.label} label={ctrl.label}\r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ))}\r\n        <button className={classes.OrderButton}\r\n            onClick={props.ordered}\r\n            disabled={!props.purchasable} >ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default BuildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate( nextProps, nextState){\r\n        return nextProps.show !== this.props.show\r\n            || nextProps.children !== this.props.children;\r\n    }\r\n    componentDidUpdate(){\r\n        console.log('[Modal] DidUpdate');\r\n    }\r\n    render(){\r\n        return(\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div className={classes.Modal} \r\n                    style={{transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                            opacity: this.props.show ? '1' : '0'}}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => (\r\n    <button className={[classes.Button, classes[props.btnType]].join(' ')}\r\n    onClick={props.clicked} disabled={props.disabled}>{props.children}</button>\r\n);\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    // componentDidUpdate(){\r\n    //     console.log('[OrderSummary] DidUpdate');\r\n    // }\r\n\r\n    render(){\r\n\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return(\r\n                <li key={igKey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]} \r\n                </li>\r\n            );\r\n        })\r\n\r\n        return(\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A deliciosu burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: ${this.props.price.toFixed(2)} </strong></p>\r\n                <p>Continue to checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n\r\n            </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.Loader} >Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nconst withErrorHandler = (WrapperComponent, axios) => {\r\n    return class extends Component{\r\n        state = {\r\n            error: null\r\n        };\r\n        constructor(props){\r\n            super(props); \r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n                console.log(\"Error: \" + error.message);\r\n            });\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n         render(){\r\n            return(\r\n                <Aux>\r\n                <Modal show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler} >\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                <WrapperComponent {...this.props} />\r\n            </Aux>\r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport axios from 'axios';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        purchasing: false\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n        .map(igKey => {\r\n            return ingredients[igKey]\r\n        }).reduce((sum, el) =>{\r\n                return sum + el;\r\n        }, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    // purchaseHandler(){ /*If we declare our handler function like this it will generate error as \"this\" keyword won't work as it is triggered through event. It won't refer to class (as per JS). Better use arrow functions*/\r\n    //     this.setState({purchasing: true});\r\n    // }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchased();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <React.Fragment>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls ingredientAdded={this.props.onIngredientAdded} \r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price} />\r\n                </React.Fragment>\r\n            );\r\n\r\n            orderSummary = <OrderSummary ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price} />\r\n        }   \r\n        \r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchased: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import classes from './CheckoutSummary.module.css';\r\nimport React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    let validationError = null;\r\n    if(props.invalid && props.touched) {\r\n        console.log(props);\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid value!</p>;\r\n    }\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement = <input className={inputClasses.join(' ')} \r\n            {...props.elementConfig} value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea className={inputClasses.join(' ')}\r\n            {...props.elementConfig} value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement = (\r\n                <select className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option value={option.value} key={option.value} >\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>);\r\n            break;\r\n        default:\r\n            inputElement = <input className={inputClasses.join(' ')} \r\n            {...props.elementConfig} value={props.value}\r\n                onChange={props.changed}/>\r\n    }\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label} >{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component{\r\n    state = {\r\n        orderForm: {           \r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },            \r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },        \r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },        \r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault(); //To prevent sending a request from input event\r\n        \r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm ){\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n        // console.log(this.props);\r\n        this.props.onOrderBurger(order);\r\n    }\r\n\r\n    checkValidity(value, rules){\r\n        let isValid = true;\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid; //Trim to remove spaces and checking whether value is equal to empty string\r\n        }\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if(rules.isNumeric){\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        \r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {...this.state.orderForm};\r\n        const updatedFormElement = {...updatedOrderForm[inputIdentifier]};\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        // console.log(formIsValid);\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n        \r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if(this.props.loading){\r\n            form = <Spinner />\r\n        }\r\n        return(\r\n            <div className={classes.ContactData} >\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\n\r\nclass Checkout extends Component{\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n    render(){\r\n        let summary = <Redirect to=\"/\" />\r\n        if(this.props.ings){\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                {purchasedRedirect}\r\n                    <CheckoutSummary ingredients={this.props.ings}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler} />\r\n\r\n                    <Route path={this.props.match.path + '/contact-data'} \r\n                    component={ContactData} />\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                {summary}                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName, \r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span key={ig.name}\r\n            style={{textTransform: 'capitalize',\r\n                    display: 'inline-block',\r\n                    margin: '0 8px',\r\n                    border: '1px solid #ccc',\r\n                    padding: '5px'}} >\r\n                {ig.name} ({ig.amount}) </span>;\r\n    });\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput} </p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Order;","import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.onFetchOrders();\r\n    }\r\n    render(){\r\n        let orders = <Spinner/>;\r\n        if(!this.props.loading){\r\n            orders = this.props.orders.map(order => (\r\n                <Order key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ))\r\n        };\r\n        return(\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, Axios));","import React, { Component } from 'react';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nclass Auth extends Component{\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: \"Your Email\"\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: \"Password\"\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    checkValidity(value, rules){\r\n        let isValid = true;\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid; //Trim to remove spaces and checking whether value is equal to empty string\r\n        }\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if(rules.isNumeric){\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        \r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = { \r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n    };\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return { isSignup: !prevState.isSignup };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n        \r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n        ));\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n        \r\n\r\n        return(\r\n            <div className={classes.Auth}>\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">Log In</Button>\r\n                </form>\r\n                <Button clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">Switch To {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst mapStateToProps = state => {\r\n    return{\r\n        loading: state.auth.loading,\r\n        error: state.auth.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup))\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(Auth);","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        <Layout>\n          <Switch>\n            <Route path='/checkout' component={Checkout} />\n            <Route path='/orders' component={Orders} />\n            <Route path='/auth' component={Auth} />\n            <Route path='/' exact component={BurgerBuilder} />\n            {/*<Route path='/burger-proj' exact component={BurgerBuilder} /> only for when hosted online(remove above Route while hosting online)*/}\n          </Switch>\n        </Layout>\n      </div>\n     );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nimport './index.css';\nimport App from './App';\nimport axios from 'axios';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\naxios.defaults.baseURL = 'https://burger-react-56352-default-rtdb.firebaseio.com/';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}